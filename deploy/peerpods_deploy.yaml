apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
    pod-security.kubernetes.io/audit: privileged
    pod-security.kubernetes.io/enforce: privileged
    pod-security.kubernetes.io/warn: privileged
  name: openshift-sandboxed-containers-operator
---
apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: peer-pods-webhook-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: openshift-sandboxed-containers-operator/serving-cert
    controller-gen.kubebuilder.io/version: v0.7.0
  name: kataconfigs.kataconfiguration.openshift.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: webhook-service
          namespace: openshift-sandboxed-containers-operator
          path: /convert
      conversionReviewVersions:
      - v1
  group: kataconfiguration.openshift.io
  names:
    kind: KataConfig
    listKind: KataConfigList
    plural: kataconfigs
    singular: kataconfig
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - description: Status of Kata runtime installation
      jsonPath: .status.installationStatus.IsInProgress
      name: InProgress
      type: string
    - description: Number of nodes with Kata runtime installed
      jsonPath: .status.installationStatus.completed.completedNodesCount
      name: Completed
      type: integer
    - description: Total number of nodes
      jsonPath: .status.totalNodesCount
      name: Total
      type: integer
    - description: Age of the KataConfig Custom Resource
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: KataConfig is the Schema for the kataconfigs API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: KataConfigSpec defines the desired state of KataConfig
            nullable: true
            properties:
              checkNodeEligibility:
                default: false
                description: CheckNodeEligibility is used to detect the node(s) eligibility
                  to run Kata containers. This is currently done through the use of
                  the Node Feature Discovery Operator (NFD). For more information
                  on how the check works, please refer to the sandboxed containers
                  documentation - https://docs.openshift.com/container-platform/latest/sandboxed_containers/deploying-sandboxed-container-workloads.html
                type: boolean
              enablePeerPods:
                default: false
                description: EnablePeerPods is used to transparently create pods on
                  a remote system. For more information on how this works, please
                  refer to the sandboxed containers documentation - https://docs.openshift.com/container-platform/latest/sandboxed_containers/deploying-sandboxed-container-workloads.html
                type: boolean
              kataConfigPoolSelector:
                description: KataConfigPoolSelector is used to filter the worker nodes
                  if not specified, all worker nodes are selected
                nullable: true
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single
                      {key,value} in the matchLabels map is equivalent to an element
                      of matchExpressions, whose key field is "key", the operator
                      is "In", and the values array contains only "value". The requirements
                      are ANDed.
                    type: object
                type: object
              kataMonitorImage:
                default: quay.io/openshift_sandboxed_containers/openshift-sandboxed-containers-monitor:latest
                description: KataMonitorImage is used to specify the container image
                  used for kata-monitor
                type: string
              logLevel:
                default: info
                description: Sets log level on kata-equipped nodes.  Valid values
                  are the same as for `crio --log-level`.
                type: string
            required:
            - checkNodeEligibility
            - enablePeerPods
            - kataMonitorImage
            type: object
          status:
            description: KataConfigStatus defines the observed state of KataConfig
            properties:
              installationStatus:
                description: InstallationStatus reflects the status of the ongoing
                  kata installation
                properties:
                  IsInProgress:
                    description: IsInProgress reflects the current state of installing
                      or not installing
                    type: string
                  completed:
                    description: Completed reflects the status of nodes that have
                      completed kata installation
                    properties:
                      completedNodesCount:
                        description: CompletedNodesCount reflects the number of nodes
                          that have completed kata operation
                        type: integer
                      completedNodesList:
                        description: CompletedNodesList reflects the list of nodes
                          that have completed kata operation
                        items:
                          type: string
                        type: array
                    type: object
                  failed:
                    description: Failed reflects the status of nodes that have failed
                      kata installation
                    properties:
                      failedNodesCount:
                        description: FailedNodesCount reflects the number of nodes
                          that have failed kata operation
                        type: integer
                      failedNodesList:
                        description: FailedNodesList reflects the list of nodes that
                          have failed kata operation
                        items:
                          description: FailedNodeStatus holds the name and the error
                            message of the failed node
                          properties:
                            error:
                              description: Error message of the failed node reported
                                by the installation daemon
                              type: string
                            name:
                              description: Name of the failed node
                              type: string
                          required:
                          - error
                          - name
                          type: object
                        type: array
                      failedNodesReason:
                        type: string
                    type: object
                  inprogress:
                    description: InProgress reflects the status of nodes that are
                      in the process of kata installation
                    properties:
                      binariesInstallNodesList:
                        items:
                          type: string
                        type: array
                      inProgressNodesCount:
                        description: InProgressNodesCount reflects the number of nodes
                          that are in the process of kata installation
                        type: integer
                      isInProgress:
                        description: IsInProgress reflects if installation is still
                          in progress
                        type: boolean
                    type: object
                required:
                - IsInProgress
                type: object
              prevMcpGeneration:
                format: int64
                type: integer
              runtimeClass:
                description: RuntimeClass is the name of the runtime class used in
                  CRIO configuration
                type: string
              totalNodesCount:
                description: TotalNodesCounts is the total number of worker nodes
                  targeted by this CR
                type: integer
              unInstallationStatus:
                description: UnInstallationStatus reflects the status of the ongoing
                  kata uninstallation
                properties:
                  completed:
                    description: Completed reflects the status of nodes that have
                      completed kata uninstallation
                    properties:
                      completedNodesCount:
                        description: CompletedNodesCount reflects the number of nodes
                          that have completed kata operation
                        type: integer
                      completedNodesList:
                        description: CompletedNodesList reflects the list of nodes
                          that have completed kata operation
                        items:
                          type: string
                        type: array
                    type: object
                  errorMessage:
                    description: Stores an error message if any.  Note that this is
                      currently meant for a single failure source when kata uninstallation
                      is blocked by existing kata-based pods, so handling of this
                      field in the controller code is correspondingly simple.  A review
                      might be necessary if this field were ever to store messages
                      coming from another source.
                    type: string
                  failed:
                    description: Failed reflects the status of nodes that have failed
                      kata uninstallation
                    properties:
                      failedNodesCount:
                        description: FailedNodesCount reflects the number of nodes
                          that have failed kata operation
                        type: integer
                      failedNodesList:
                        description: FailedNodesList reflects the list of nodes that
                          have failed kata operation
                        items:
                          description: FailedNodeStatus holds the name and the error
                            message of the failed node
                          properties:
                            error:
                              description: Error message of the failed node reported
                                by the installation daemon
                              type: string
                            name:
                              description: Name of the failed node
                              type: string
                          required:
                          - error
                          - name
                          type: object
                        type: array
                      failedNodesReason:
                        type: string
                    type: object
                  inProgress:
                    description: InProgress reflects the status of nodes that are
                      in the process of kata uninstallation
                    properties:
                      binariesUninstallNodesList:
                        items:
                          type: string
                        type: array
                      inProgressNodesCount:
                        type: integer
                      status:
                        type: string
                    required:
                    - status
                    type: object
                type: object
              upgradeStatus:
                description: Upgradestatus reflects the status of the ongoing kata
                  upgrade
                type: object
            required:
            - prevMcpGeneration
            - runtimeClass
            - totalNodesCount
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  name: peerpodconfigs.confidentialcontainers.org
spec:
  group: confidentialcontainers.org
  names:
    kind: PeerPodConfig
    listKind: PeerPodConfigList
    plural: peerpodconfigs
    singular: peerpodconfig
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: PeerPodConfig is the Schema for the peerpodconfigs API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PeerPodConfigSpec defines the desired state of PeerPodConfig
            properties:
              cloudSecretName:
                description: CloudSecretName is the name of the secret that holds
                  the credentials for the cloud provider
                type: string
              instanceType:
                description: InstanceType describes the name of the instance type
                  of the chosen cloud provider
                type: string
              limit:
                description: Limit is the max number of peer pods. This is exposed
                  as expended resource on nodes
                type: string
            required:
            - cloudSecretName
            type: object
          status:
            description: PeerPodConfigStatus defines the observed state of PeerPodConfig
            properties:
              setupCompleted:
                description: SetupCompleted is set to true when all components have
                  been deployed/created
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: null
  name: monitor
  namespace: openshift-sandboxed-containers-operator
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: peer-pods-webhook-controller-manager
  namespace: peer-pods-webhook-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: leader-election-role
  namespace: openshift-sandboxed-containers-operator
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: monitor-role
  namespace: openshift-sandboxed-containers-operator
rules:
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  - pods
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: peer-pods-webhook-leader-election-role
  namespace: peer-pods-webhook-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: manager-role
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - update
- apiGroups:
  - ""
  resources:
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - ""
  - machineconfiguration.openshift.io
  resources:
  - configmaps
  - containerruntimeconfigs
  - endpoints
  - events
  - machineconfigpools
  - machineconfigs
  - nodes
  - persistentvolumeclaims
  - pods
  - secrets
  - services
  - services/finalizers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - daemonsets
  - deployments
  - replicasets
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resourceNames:
  - manager-role
  resources:
  - daemonsets/finalizers
  verbs:
  - update
- apiGroups:
  - confidentialcontainers.org
  resources:
  - peerpodconfigs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - confidentialcontainers.org
  resources:
  - peerpodconfigs/finalizers
  verbs:
  - update
- apiGroups:
  - confidentialcontainers.org
  resources:
  - peerpodconfigs/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - config.openshift.io
  resources:
  - clusterversions
  verbs:
  - get
- apiGroups:
  - kataconfiguration.openshift.io
  resources:
  - kataconfigs
  - kataconfigs/finalizers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - kataconfiguration.openshift.io
  resources:
  - kataconfigs/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - node.k8s.io
  resources:
  - runtimeclasses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - security.openshift.io
  resources:
  - securitycontextconstraints
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - use
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: peer-pods-webhook-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: peer-pods-webhook-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: peer-pods-webhook-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: leader-election-rolebinding
  namespace: openshift-sandboxed-containers-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: leader-election-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: openshift-sandboxed-containers-operator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: monitor-rolebinding
  namespace: openshift-sandboxed-containers-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: monitor-role
subjects:
- kind: ServiceAccount
  name: prometheus-k8s
  namespace: openshift-monitoring
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: peer-pods-webhook-leader-election-rolebinding
  namespace: peer-pods-webhook-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: peer-pods-webhook-leader-election-role
subjects:
- kind: ServiceAccount
  name: peer-pods-webhook-controller-manager
  namespace: peer-pods-webhook-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: manager-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: openshift-sandboxed-containers-operator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: peer-pods-webhook-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: peer-pods-webhook-manager-role
subjects:
- kind: ServiceAccount
  name: peer-pods-webhook-controller-manager
  namespace: peer-pods-webhook-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: peer-pods-webhook-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: peer-pods-webhook-proxy-role
subjects:
- kind: ServiceAccount
  name: peer-pods-webhook-controller-manager
  namespace: peer-pods-webhook-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: proxy-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: openshift-sandboxed-containers-operator
---
apiVersion: v1
data:
  kata-resources.json: |-
    {
        "annotations": {
          "list": [
        ]
      },
      "editable": true,
      "gnetId": null,
      "graphTooltip": 0,
      "links": [

      ],
      "refresh": "10s",
      "rows": [
        {
          "collapse": false,
          "height": "250px",
          "panels": [
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": null,
              "description": "",
              "fieldConfig": {
                "defaults": {},
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 12,
                "x": 0,
                "y": 1
              },
              "hiddenSeries": false,
              "id": 2,
              "legend": {
                "avg": false,
                "current": false,
                "max": false,
                "min": false,
                "show": true,
                "total": false,
                "values": false
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "7.5.11",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "exemplar": true,
                  "expr": "sum(count by(instance) (kata_guest_load{item=\"load1\"}))",
                  "interval": "",
                  "legendFormat": "number of VMs",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Number of running VMs",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": null,
              "fieldConfig": {
                "defaults": {},
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 12,
                "x": 0,
                "y": 9
              },
              "hiddenSeries": false,
              "id": 10,
              "legend": {
                "avg": false,
                "current": false,
                "max": false,
                "min": false,
                "show": true,
                "total": false,
                "values": false
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "7.5.11",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "exemplar": true,
                  "expr": "sum by (sandbox_id) (irate(kata_guest_cpu_time{cpu=\"total\",  item=~\"irq|softirq|system|user\"}[5m]))",
                  "interval": "",
                  "legendFormat": "sandbox id {{sandbox_id}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "CPU Usage (per VM)",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": null,
              "description": "",
              "fieldConfig": {
                "defaults": {},
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 12,
                "x": 0,
                "y": 17
              },
              "hiddenSeries": false,
              "id": 12,
              "legend": {
                "avg": false,
                "current": false,
                "max": false,
                "min": false,
                "show": true,
                "total": false,
                "values": false
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "7.5.11",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "exemplar": true,
                  "expr": "(kata_guest_meminfo{item=\"mem_total\"} - on(sandbox_id) kata_guest_meminfo{item=\"mem_free\"})",
                  "interval": "",
                  "legendFormat": "sandbox id {{sandbox_id}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Memory Usage (per VM)",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            }
          ],
          "repeat": null,
          "repeatIteration": null,
          "repeatRowId": null,
          "showTitle": true,
          "title": "Kata Pods",
          "titleSize": "h6"
        }
      ],
      "schemaVersion": 14,
      "style": "dark",
      "tags": [
        "kata-mixin"
      ],
      "templating": {
        "list": []
      },
      "time": {
        "from": "now-6h",
        "to": "now"
      },
      "timepicker": {},
      "timezone": "",
      "title": "Sandboxed Containers",
      "uid": "aacN2Wh7k",
      "version": 1
    }
kind: ConfigMap
metadata:
  labels:
    console.openshift.io/dashboard: "true"
  name: grafana-dashboard-sandboxed-containers
  namespace: openshift-sandboxed-containers-operator
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: 290f4947.kataconfiguration.openshift.io
kind: ConfigMap
metadata:
  name: manager-config
  namespace: openshift-sandboxed-containers-operator
---
apiVersion: v1
data:
  CLOUD_PROVIDER: libvirt
kind: ConfigMap
metadata:
  name: peer-pods-cm
  namespace: openshift-sandboxed-containers-operator
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: a3663802.confidential-containers
kind: ConfigMap
metadata:
  name: peer-pods-webhook-manager-config
  namespace: peer-pods-webhook-system
---
apiVersion: v1
kind: Secret
metadata:
  name: peer-pods-secret
  namespace: openshift-sandboxed-containers-operator
stringData:
  CLOUD_PROVIDER: libvirt
  LIBVIRT_NET: openshift
  LIBVIRT_POOL: default
  LIBVIRT_URI: qemu+ssh://root@10.19.153.37/system?no_verify=1
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: controller-manager-metrics-svc
  namespace: openshift-sandboxed-containers-operator
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: openshift-sandboxed-containers-monitor
  name: metrics
  namespace: openshift-sandboxed-containers-operator
spec:
  ports:
  - name: metrics
    port: 8090
    protocol: TCP
  selector:
    name: openshift-sandboxed-containers-monitor
---
apiVersion: v1
kind: Service
metadata:
  name: webhook-service
  namespace: openshift-sandboxed-containers-operator
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 9443
  selector:
    control-plane: controller-manager
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: peer-pods-webhook-controller-manager-metrics-service
  namespace: peer-pods-webhook-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: v1
kind: Service
metadata:
  name: peer-pods-webhook-webhook-service
  namespace: peer-pods-webhook-system
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 9443
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: controller-manager
  namespace: openshift-sandboxed-containers-operator
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        env:
        - name: PEER_POD_TARGET_RUNTIMECLASS
          value: kata-remote-cc
        image: quay.io/openshift_sandboxed_containers/osc-peerpods:latest
        imagePullPolicy: Always
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        resources:
          limits:
            cpu: 200m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 40Mi
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
      terminationGracePeriodSeconds: 10
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Exists
      - effect: NoExecute
        key: node.kubernetes.io/unreachable
        operator: Exists
        tolerationSeconds: 120
      - effect: NoExecute
        key: node.kubernetes.io/not-ready
        operator: Exists
        tolerationSeconds: 120
      - effect: NoSchedule
        key: node.kubernetes.io/memory-pressure
        operator: Exists
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: peer-pods-webhook-controller-manager
  namespace: peer-pods-webhook-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.11.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        env:
        - name: TARGET_RUNTIMECLASS
          value: kata-remote-cc
        - name: POD_VM_INSTANCE_TYPE
          value: t2.small
        - name: POD_VM_EXTENDED_RESOURCE
          value: kata.peerpods.io/vm
        image: quay.io/confidential-containers/peer-pods-webhook:latest
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      securityContext:
        runAsNonRoot: true
      serviceAccountName: peer-pods-webhook-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: peer-pods-webhook-serving-cert
  namespace: openshift-sandboxed-containers-operator
spec:
  dnsNames:
  - peer-pods-webhook-webhook-service.peer-pods-webhook-system.svc
  - peer-pods-webhook-webhook-service.peer-pods-webhook-system.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: peer-pods-webhook-selfsigned-issuer
  secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: serving-cert
  namespace: openshift-sandboxed-containers-operator
spec:
  dnsNames:
  - webhook-service.openshift-sandboxed-containers-operator.svc
  - webhook-service.openshift-sandboxed-containers-operator.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: selfsigned-issuer
  secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: peer-pods-webhook-serving-cert
  namespace: peer-pods-webhook-system
spec:
  dnsNames:
  - peer-pods-webhook-webhook-service.peer-pods-webhook-system.svc
  - peer-pods-webhook-webhook-service.peer-pods-webhook-system.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: peer-pods-webhook-selfsigned-issuer
  secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: selfsigned-issuer
  namespace: openshift-sandboxed-containers-operator
spec:
  selfSigned: {}
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: peer-pods-webhook-selfsigned-issuer
  namespace: peer-pods-webhook-system
spec:
  selfSigned: {}
---
apiVersion: machineconfiguration.openshift.io/v1
kind: MachineConfig
metadata:
  labels:
    machineconfiguration.openshift.io/role: worker
  name: 40-worker-kata-remote-config
spec:
  config:
    ignition:
      version: 2.2.0
    storage:
      files:
      - contents:
          source: data:text/plain;charset=utf-8;base64,
        filesystem: root
        mode: 420
        path: /opt/kata/configuration-remote.toml
---
apiVersion: machineconfiguration.openshift.io/v1
kind: MachineConfig
metadata:
  labels:
    machineconfiguration.openshift.io/role: worker
  name: 50-kata
spec:
  config:
    ignition:
      version: 2.2.0
    storage:
      files:
      - contents:
          source: data:text/plain;charset=utf-8;base64,W2NyaW8ucnVudGltZS5ydW50aW1lcy5rYXRhLXJlbW90ZS1jY10KcnVudGltZV9wYXRoID0gIi91c3IvYmluL2NvbnRhaW5lcmQtc2hpbS1rYXRhLXYyLXRwIgpydW50aW1lX3R5cGUgPSAidm0iCnJ1bnRpbWVfcm9vdCA9ICIvcnVuL3ZjIgpydW50aW1lX2NvbmZpZ19wYXRoID0gIi9vcHQva2F0YS9jb25maWd1cmF0aW9uLXJlbW90ZS50b21sIg==
        filesystem: root
        mode: 420
        path: /etc/crio/crio.conf.d/50-kata
---
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: prometheus-sandboxed-containers-rules
  namespace: openshift-sandboxed-containers-operator
spec:
  groups:
  - name: kata_monitor_rules
    rules:
    - expr: sum(kata_monitor_running_shim_count)
      record: cluster:kata_monitor_running_shim_count:sum
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: openshift-sandboxed-containers-monitor
  namespace: openshift-sandboxed-containers-operator
spec:
  endpoints:
  - port: metrics
  namespaceSelector:
    matchNames:
    - openshift-sandboxed-containers-operator
  selector:
    matchLabels:
      name: openshift-sandboxed-containers-monitor
---
apiVersion: node.k8s.io/v1
handler: kata-remote-cc
kind: RuntimeClass
metadata:
  name: kata-remote-cc
overhead:
  podFixed:
    cpu: 250m
    memory: 120Mi
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: peer-pods-webhook-system/peer-pods-webhook-serving-cert
  name: peer-pods-webhook-mutating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: peer-pods-webhook-webhook-service
      namespace: peer-pods-webhook-system
      path: /mutate-v1-pod
  failurePolicy: Fail
  name: mwebhook.peerpods.io
  namespaceSelector:
    matchExpressions:
    - key: peerpods
      operator: In
      values:
      - "true"
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - pods
  sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: openshift-sandboxed-containers-operator/serving-cert
  name: validating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: webhook-service
      namespace: openshift-sandboxed-containers-operator
      path: /validate-kataconfiguration-openshift-io-v1-kataconfig
  failurePolicy: Fail
  name: vkataconfig.kb.io
  rules:
  - apiGroups:
    - kataconfiguration.openshift.io
    apiVersions:
    - v1
    operations:
    - CREATE
    resources:
    - kataconfigs
  sideEffects: None
